name: "VGG_CNN_F"
input: "data" input_shape { dim: 1 dim: 3 dim: 224 dim: 224 }
input: "rois" input_shape { dim: 1 dim: 5 }
input: "roi_scores" input_shape { dim: 1 }

#-------------------------------------------------------------------------------------------------
layer {	name: "conv1" type: "Convolution" bottom: "data" top: "conv1"
	convolution_param { num_output: 64 kernel_size: 11 stride: 4 }}
layer { name: "relu1" type: "ReLU" bottom: "conv1" top: "conv1" }
layer { name: "norm1" type: "LRN" bottom: "conv1" top: "norm1"
	lrn_param { local_size: 5 alpha: 0.0005 beta: 0.75 k: 2 }}
layer {	name: "pool1" type: "Pooling" bottom: "norm1" top: "pool1"
	pooling_param { pool: MAX kernel_size: 3 stride: 2 }}
layer { name: "conv2" type: "Convolution" bottom: "pool1" top: "conv2"
	convolution_param { num_output: 256 pad: 2 kernel_size: 5 }}
layer { name: "relu2" type: "ReLU" bottom: "conv2" top: "conv2" }
layer { name: "norm2" type: "LRN" bottom: "conv2" top: "norm2"
	lrn_param { local_size: 5 alpha: 0.0005 beta: 0.75 k: 2 }}
layer { name: "pool2" type: "Pooling" bottom: "norm2" top: "pool2"
	pooling_param { pool: MAX kernel_size: 3 stride: 2 }}
layer {	name: "conv3" type: "Convolution" bottom: "pool2" top: "conv3"
	convolution_param { num_output: 256 pad: 1 kernel_size: 3 }}
layer { name: "relu3" type: "ReLU" bottom: "conv3" top: "conv3" }
layer { name: "conv4" type: "Convolution" bottom: "conv3" top: "conv4"
	convolution_param { num_output: 256 pad: 1 kernel_size: 3 }}
layer { name: "relu4" type: "ReLU" bottom: "conv4" top: "conv4" }
layer { name: "conv5" type: "Convolution" bottom: "conv4" top: "conv5"
	convolution_param { num_output: 256 pad: 1 kernel_size: 3 }}
layer { name: "relu5" type: "ReLU" bottom: "conv5" top: "conv5" }
#-------------------------------------------------------------------------------------------------------------

#------------------------------------ROI POOLING--------------------------------------------------------------
layer { name: "roi_pool_conv5" type: "ROIPooling" bottom: "conv5" bottom: "rois" top: "roi_pool_conv5"
	roi_pooling_param { pooled_w: 6 pooled_h: 6 spatial_scale: 0.0625 }}
#layer { name: "roi_pool_conv5" type: "ROIAlign" bottom: "conv5" bottom: "rois" top: "roi_pool_conv5"
#	roi_pooling_param { pooled_w: 6 pooled_h: 6 spatial_scale: 0.0625 }}

#------------------------------------ROI SCORE BOOSTING-------------------------------------------------------
layer { name: "boost" type: "Scale" bottom: "roi_pool_conv5" bottom: "roi_scores" top: "boost"
	scale_param { axis: 0 }}

#-----------------------------------FC------------------------------------------------------------------------
layer { name: "fc6" type: "InnerProduct" bottom: "boost" top: "fc6"
	inner_product_param { num_output: 4096 }}

layer { name: "relu6" type: "ReLU" bottom: "fc6" top: "fc6" }

layer { name: "drop6" type: "Dropout" bottom: "fc6" top: "fc6" dropout_param { dropout_ratio: 0.5 }}

layer { name: "fc7" type: "InnerProduct" bottom: "fc6" top: "fc7"
	inner_product_param { num_output: 4096 }}

layer { name: "relu7" type: "ReLU" bottom: "fc7" top: "fc7" }

layer { name: "drop7" type: "Dropout" bottom: "fc7" top: "fc7" dropout_param { dropout_ratio: 0.5 }}

#-----------------------------------TWO STREAM----------------------------------------------------------------
layer { name: "fc8c" type: "InnerProduct" bottom: "fc7" top: "fc8c" 
	inner_product_param { num_output: 20 }}
layer { name: "fc8d" type: "InnerProduct" bottom: "fc7" top: "fc8d" 
	inner_product_param { num_output: 20 }}

layer { name: "alpha_cls" type: "Softmax" bottom: "fc8c" top: "alpha_cls" softmax_param { axis: 1 }}
layer { name: "alpha_det" type: "Softmax" bottom: "fc8d" top: "alpha_det" softmax_param { axis: 0 }}

#-----------------------------------COMBINE-------------------------------------------------------------------
layer { name: "bbox_prob" type: "Eltwise" bottom: "alpha_cls" bottom: "alpha_det" top: "bbox_prob"
	eltwise_param { operation: PROD }}
