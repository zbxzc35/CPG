name: "VGG_ILSVRC_16_layers"
input: "data" input_shape { dim: 1 dim: 3 dim: 224 dim: 224 }
input: "rois" input_shape { dim: 1 dim: 5 }
input: "roi_scores" input_shape { dim: 1 }
input: "roi_num" input_shape { dim: 1 }

#-------------------------------------------------------------------------------------------------
layer { name: "conv1_1" type: "Convolution" bottom: "data" top: "conv1_1"
	convolution_param { num_output: 64 pad: 1 kernel_size: 3 }}
layer { name: "relu1_1" type: "ReLU" bottom: "conv1_1" top: "conv1_1" }
layer { name: "conv1_2" type: "Convolution" bottom: "conv1_1" top: "conv1_2"
	convolution_param { num_output: 64 pad: 1 kernel_size: 3 }}
layer { name: "relu1_2" type: "ReLU" bottom: "conv1_2" top: "conv1_2" }
layer { name: "pool1" type: "Pooling" bottom: "conv1_2" top: "pool1" pooling_param { pool: MAX kernel_size: 2 stride: 2 }}
layer { name: "conv2_1" type: "Convolution" bottom: "pool1" top: "conv2_1"
	convolution_param { num_output: 128 pad: 1 kernel_size: 3 }}
layer { name: "relu2_1" type: "ReLU" bottom: "conv2_1" top: "conv2_1" }
layer { name: "conv2_2" type: "Convolution" bottom: "conv2_1" top: "conv2_2"
	convolution_param { num_output: 128 pad: 1 kernel_size: 3 }}
layer { name: "relu2_2" type: "ReLU" bottom: "conv2_2" top: "conv2_2" }
layer { name: "pool2" type: "Pooling" bottom: "conv2_2" top: "pool2" pooling_param { pool: MAX kernel_size: 2 stride: 2 }}
layer { name: "conv3_1" type: "Convolution" bottom: "pool2" top: "conv3_1"
	convolution_param { num_output: 256 pad: 1 kernel_size: 3 }}
layer { name: "relu3_1" type: "ReLU" bottom: "conv3_1" top: "conv3_1" }
layer { name: "conv3_2" type: "Convolution" bottom: "conv3_1" top: "conv3_2"
	convolution_param { num_output: 256 pad: 1 kernel_size: 3 }}
layer { name: "relu3_2" type: "ReLU" bottom: "conv3_2" top: "conv3_2" }
layer { name: "conv3_3" type: "Convolution" bottom: "conv3_2" top: "conv3_3"
	convolution_param { num_output: 256 pad: 1 kernel_size: 3 }}
layer { name: "relu3_3" type: "ReLU" bottom: "conv3_3" top: "conv3_3" }
layer { name: "pool3" type: "Pooling" bottom: "conv3_3" top: "pool3" pooling_param { pool: MAX kernel_size: 2 stride: 2 }}
layer { name: "conv4_1" type: "Convolution" bottom: "pool3" top: "conv4_1"
	convolution_param { num_output: 512  pad: 1 kernel_size: 3 }}
layer { name: "relu4_1" type: "ReLU" bottom: "conv4_1" top: "conv4_1" }
layer { name: "conv4_2" type: "Convolution" bottom: "conv4_1" top: "conv4_2"
	convolution_param { num_output: 512 pad: 1 kernel_size: 3 }}
layer { name: "relu4_2" type: "ReLU" bottom: "conv4_2" top: "conv4_2" }
layer { name: "conv4_3" type: "Convolution" bottom: "conv4_2" top: "conv4_3"
	convolution_param { num_output: 512 pad: 1 kernel_size: 3 }}
layer { name: "relu4_3" type: "ReLU" bottom: "conv4_3" top: "conv4_3" }
layer { name: "pool4" type: "Pooling" bottom: "conv4_3" top: "pool4" pooling_param { pool: MAX kernel_size: 2 stride: 2 }}
layer { name: "conv5_1" type: "Convolution" bottom: "pool4" top: "conv5_1"
	convolution_param { num_output: 512 pad: 1 kernel_size: 3 }}
layer { name: "relu5_1" type: "ReLU" bottom: "conv5_1" top: "conv5_1" }
layer { name: "conv5_2" type: "Convolution" bottom: "conv5_1" top: "conv5_2"
	convolution_param { num_output: 512 pad: 1 kernel_size: 3 }}
layer { name: "relu5_2" type: "ReLU" bottom: "conv5_2" top: "conv5_2" }
layer { name: "conv5_3" type: "Convolution" bottom: "conv5_2" top: "conv5_3"
	convolution_param { num_output: 512 pad: 1 kernel_size: 3 }}
layer { name: "relu5_3" type: "ReLU" bottom: "conv5_3" top: "conv5_3" }
#-------------------------------------------------------------------------------------------------------------

#------------------------------------ROI POOLING--------------------------------------------------------------
layer { name: "roi_pool_conv5" type: "ROIPooling" bottom: "conv5_3" bottom: "rois" top: "roi_pool_conv5"
	roi_pooling_param { pooled_w: 7 pooled_h: 7 spatial_scale: 0.0625 }}
#layer { name: "roi_pool_conv5" type: "YAROIPooling" bottom: "conv5_3" bottom: "rois" top: "roi_pool_conv5"
#	ya_roi_pooling_param { pooled_w: 7 pooled_h: 7}}
#layer { name: "roi_pool_conv5" type: "ROIAlign" bottom: "conv5_3" bottom: "rois" top: "roi_pool_conv5"
#	roi_pooling_param { pooled_w: 7 pooled_h: 7 spatial_scale: 0.0625 }}

#------------------------------------ROI SCORE BOOSTING-------------------------------------------------------
layer { name: "boost" type: "Scale" bottom: "roi_pool_conv5" bottom: "roi_scores" top: "boost"
	scale_param { axis: 0 }}

#-----------------------------------FC------------------------------------------------------------------------
layer { name: "fc6" type: "InnerProduct" bottom: "boost" top: "fc6"
	inner_product_param { num_output: 4096 }}

layer { name: "relu6" type: "ReLU" bottom: "fc6" top: "fc6" }

layer { name: "drop6" type: "Dropout" bottom: "fc6" top: "fc6" dropout_param { dropout_ratio: 0.5 }}

layer { name: "fc7" type: "InnerProduct" bottom: "fc6" top: "fc7"
	inner_product_param { num_output: 4096 }}

layer { name: "relu7" type: "ReLU" bottom: "fc7" top: "fc7" }

layer { name: "drop7" type: "Dropout" bottom: "fc7" top: "fc7" dropout_param { dropout_ratio: 0.5 }}

#-----------------------------------TWO STREAM----------------------------------------------------------------
layer { name: "fc8c" type: "InnerProduct" bottom: "fc7" top: "fc8c" 
	inner_product_param { num_output: 20 }}
layer { name: "fc8d" type: "InnerProduct" bottom: "fc7" top: "fc8d" 
	inner_product_param { num_output: 20 }}

layer { name: "alpha_cls" type: "Softmax" bottom: "fc8c" top: "alpha_cls" softmax_param { axis: 1 }}
layer { name: "alpha_det" type: "Softmax" bottom: "fc8d" top: "alpha_det" softmax_param { axis: 0 }}

#-----------------------------------COMBINE-------------------------------------------------------------------
layer { name: "bbox_score" type: "Eltwise" bottom: "alpha_cls" bottom: "alpha_det" top: "bbox_score"
	eltwise_param { operation: PROD }}

#-----------------------------------POOLING-------------------------------------------------------------------
layer { name: "cls_score" type: "RoIScorePooling" bottom: "bbox_score" bottom: "roi_num" top: "cls_score"
	roi_score_pooling_param { pool: SUM axis: 0 }}

#layer { name: "loss_cls" type: "CrossEntropyLoss" bottom: "cls_score" bottom: "labels" top: "loss_cls" loss_weight: 1
#	propagate_down: true propagate_down: false cross_entropy_loss_param { display: 1280 }}

#layer { name: "loss_feature" type: "SmoothFeatureLoss" bottom: "fc7" bottom: "rois" bottom: "bbox_score" bottom: "labels"
#	top: "loss_feature" loss_weight: 0.001 smooth_feature_loss_param { debug_info: false }}

#-----------------------------------CPG-----------------------------------------------------------------------
layer { name: "mil" type: "MIL" bottom: "cls_score" bottom: "cls_score" bottom: "rois" bottom: "bbox_score"
	top: "cpg_roi_select"
	cpg_param { is_cpg: false mode: CPG_POOLING is_order: false is_contrast: false debug_info: false
        max_num_im_cpg: 100220, ignore_label: 20
	cpg_blob_name: "data"
	#cpg_blob_name: "conv1_2"
	#cpg_blob_name: "conv2_2"
	#cpg_blob_name: "conv3_3"
	#cpg_blob_name: "conv4_3"
	#cpg_blob_name: "conv5_3"
	predict_blob_name: "cls_score"
	predict_threshold: 0.7 predict_order: 0.0 crf_threshold: 0.95
	mass_threshold: 0.2 density_threshold: 0.0 fg_threshold: 0.1 bg_threshold: 0.001 }}

#-----------------------------------CPG SCORE-----------------------------------------------------------
layer { name: "bbox_prob" type: "Eltwise" bottom: "bbox_score" bottom: "cpg_roi_select" top: "bbox_prob"
	eltwise_param { operation: PROD }}
